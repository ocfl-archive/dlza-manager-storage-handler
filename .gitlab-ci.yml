stages:
  - unit_tests
  - report_tests
  - publish
default:
  image: golang:latest

unit-test:
  stage: unit_tests
  script:
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.switch.ch/".insteadOf "https://gitlab.switch.ch/"
    - CGO_ENABLED=0 go test -v ./... -short -coverprofile=coverage-report.out
    - go tool cover -html=coverage-report.out -o coverage-report.html
    - go tool cover -func=coverage-report.out
  artifacts:
    paths:
      - coverage-report.html
    expire_in: 1 days
  coverage: "/\\(statements\\)\\s+\\d+.?\\d+%/"

report-test: 
  stage: report_tests
  script:
    - go install gotest.tools/gotestsum@latest
    - gotestsum --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: report.xml

.build-image:
  stage: publish
  image: 
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --build-arg CI_JOB_TOKEN
      --build-arg SSH_PRIVATE_KEY
      --build-arg SSH_PUBLIC_KEY
      --context $CI_PROJECT_DIR
      --dockerfile $CI_PROJECT_DIR/Dockerfile
      --destination $IMAGE_TAG


build-tagged-image:
  extends: .build-image
  variables:
    IMAGE_TAG: "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
  only:                     
    - tags

build-latest-image:
  extends: .build-image
  variables:
    IMAGE_TAG: "$CI_REGISTRY_IMAGE:latest"
  only:
    - main

build-develop-image:
  extends: .build-image
  variables:
    IMAGE_TAG: "$CI_REGISTRY_IMAGE:develop"
  only:             
    - develop
    - dev_png
    - dismantling-uploader
