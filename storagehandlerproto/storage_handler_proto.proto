// protoc --go_out=. --go-grpc_out=. proto/copy.proto

syntax="proto3";

option go_package = "github.com/ocfl-archive/dlza-manager-storage-handler/storagehandlerproto";
option java_package = "ch.unibas.ub.storagehandler.pg";
option java_outer_classname = "StorageHandlerProto";
option java_multiple_files = true;
option objc_class_prefix = "UBB";
option csharp_namespace = "Unibas.UB.StorageHandler.PG";

package storagehandlerproto;

import "dlza_proto.proto";

service UploaderStorageHandlerService {
  rpc CopyFile(dlzamanagerproto.IncomingOrder) returns (dlzamanagerproto.Status) {};
}

service UploaderHandlerService {
  rpc TenantHasAccess(dlzamanagerproto.UploaderAccessObject) returns (dlzamanagerproto.Status) {};
  rpc SaveObjectAndFiles(dlzamanagerproto.ObjectAndFiles) returns (dlzamanagerproto.Id);
  rpc AlterStatus(dlzamanagerproto.StatusObject) returns (dlzamanagerproto.Status){}
}

service ClerkStorageHandlerService {
  rpc CreateStoragePartition(dlzamanagerproto.StoragePartition) returns (dlzamanagerproto.Status) {};
}

service ClerkHandlerService {

  rpc FindTenantById(dlzamanagerproto.Id) returns (dlzamanagerproto.Tenant){};
  rpc DeleteTenant(dlzamanagerproto.Id) returns (dlzamanagerproto.Status){};
  rpc SaveTenant(dlzamanagerproto.Tenant) returns (dlzamanagerproto.Status){};
  rpc UpdateTenant(dlzamanagerproto.Tenant) returns (dlzamanagerproto.Status){};
  rpc FindAllTenants(dlzamanagerproto.NoParam) returns (dlzamanagerproto.Tenants){};

  rpc GetStorageLocationsByTenantId(dlzamanagerproto.Id) returns (dlzamanagerproto.StorageLocations){};
  rpc SaveStorageLocation(dlzamanagerproto.StorageLocation) returns (dlzamanagerproto.Status){};
  rpc DeleteStorageLocationById(dlzamanagerproto.Id) returns (dlzamanagerproto.Status){};

  rpc GetCollectionsByTenantId(dlzamanagerproto.Id) returns (dlzamanagerproto.Collections){};
  rpc GetCollectionById(dlzamanagerproto.Id) returns (dlzamanagerproto.Collection){};
  rpc DeleteCollectionById(dlzamanagerproto.Id) returns (dlzamanagerproto.Status){};
  rpc CreateCollection(dlzamanagerproto.Collection) returns (dlzamanagerproto.Status){};
  rpc UpdateCollection(dlzamanagerproto.Collection) returns (dlzamanagerproto.Status){};

  rpc GetObjectById(dlzamanagerproto.Id) returns (dlzamanagerproto.Object){};
  rpc GetObjectInstanceById(dlzamanagerproto.Id) returns (dlzamanagerproto.ObjectInstance){};
  rpc GetFileById(dlzamanagerproto.Id) returns (dlzamanagerproto.File){};
  rpc GetObjectInstanceCheckById(dlzamanagerproto.Id) returns (dlzamanagerproto.ObjectInstanceCheck){};
  rpc GetStorageLocationById(dlzamanagerproto.Id) returns (dlzamanagerproto.StorageLocation){};
  rpc GetStoragePartitionById(dlzamanagerproto.Id) returns (dlzamanagerproto.StoragePartition){};

  rpc FindAllTenantsPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.Tenants){};
  rpc GetCollectionsByTenantIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.Collections){};
  rpc GetObjectsByCollectionIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.Objects){}
  rpc GetFilesByCollectionIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.Files){}
  rpc GetMimeTypesForCollectionId(dlzamanagerproto.Pagination) returns (dlzamanagerproto.MimeTypes){}
  rpc GetPronomsForCollectionId(dlzamanagerproto.Pagination) returns (dlzamanagerproto.Pronoms){}
  rpc GetObjectInstancesByObjectIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.ObjectInstances){}
  rpc GetFilesByObjectIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.Files){}
  rpc GetObjectInstanceChecksByObjectInstanceIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.ObjectInstanceChecks){}

  rpc GetStorageLocationsByTenantIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.StorageLocations){}
  rpc GetStoragePartitionsByLocationIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.StoragePartitions){}
  rpc GetObjectInstancesByStoragePartitionIdPaginated(dlzamanagerproto.Pagination) returns (dlzamanagerproto.ObjectInstances){}

  rpc CheckStatus(dlzamanagerproto.Id) returns (dlzamanagerproto.StatusObject){}
  rpc CreateStatus(dlzamanagerproto.StatusObject) returns (dlzamanagerproto.Id){}
  rpc AlterStatus(dlzamanagerproto.StatusObject) returns (dlzamanagerproto.Status){}
}

service DispatcherStorageHandlerService {
  rpc ChangeQualityForCollections(dlzamanagerproto.CollectionAliases) returns (dlzamanagerproto.NoParam) {};
}